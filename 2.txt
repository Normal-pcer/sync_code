Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ns/call  ns/call  name    
 36.29      0.45     0.45 30000005    15.00    36.07  GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*)
 19.35      0.69     0.24 70000007     3.43     3.43  GenshinLang::Interpreter::Interpreter::Scope::get(GenshinLang::Tokenizer::Identifier)
 12.90      0.85     0.16 270000048     0.59     0.59  GenshinLang::test()
  7.26      0.94     0.09 70000007     1.29     1.29  std::variant<decltype(nullptr), std::shared_ptr, int, std::shared_ptr, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> > const&)
  4.84      1.00     0.06 60000016     1.00     1.00  std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >&&)
  4.84      1.06     0.06 20000003     3.00     6.43  GenshinLang::Interpreter::Interpreter::evaluateLeftValueExpression(GenshinLang::AST::ExpressionNode*)
  4.03      1.11     0.05 10000007     5.00   115.00  void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*)
  4.03      1.16     0.05                             _init
  2.42      1.19     0.03 10000166     3.00     3.00  GenshinLang::Interpreter::Interpreter::enterScope()
  1.61      1.21     0.02 40000001     0.50     0.50  std::__detail::__variant::_Variant_storage<false, decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::~_Variant_storage()
  1.61      1.23     0.02 20000003     1.00     1.00  GenshinLang::Interpreter::Object::copy()
  0.81      1.24     0.01 10000001     1.00     4.00  GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*)
  0.00      1.24     0.00      440     0.00     0.00  main::FileScanner::gc()
  0.00      1.24     0.00      236     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      1.24     0.00      169     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  0.00      1.24     0.00      137     0.00     0.00  GenshinLang::AST::ExpressionNode::~ExpressionNode()
  0.00      1.24     0.00      107     0.00     0.00  std::variant<int, GenshinLang::Tokenizer::Identifier, GenshinLang::Tokenizer::Integer, GenshinLang::Tokenizer::String, GenshinLang::Tokenizer::Symbol, GenshinLang::Tokenizer::FloatingPointNumber>::~variant()
  0.00      1.24     0.00      104     0.00     0.81  GenshinLang::IdentifierMap::IdentifierMap()
  0.00      1.24     0.00       87     0.00     0.00  GenshinLang::AST::ValueNode::~ValueNode()
  0.00      1.24     0.00       60     0.00     0.00  GenshinLang::AST::ValueNode::ValueNode(GenshinLang::AST::ValueNode const&)
  0.00      1.24     0.00       44     0.00     0.00  GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType* std::__do_uninit_copy<GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType*>(GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType*)
  0.00      1.24     0.00       37     0.00     0.00  std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::~vector()
  0.00      1.24     0.00       33     0.00     0.00  GenshinLang::AST::ExpressionNode::infoOf(GenshinLang::AST::ExpressionNode::Operator)
  0.00      1.24     0.00       26     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  0.00      1.24     0.00       22     0.00     3.00  GenshinLang::Tokenizer::Identifier::parse(IO::Scanner&)
  0.00      1.24     0.00       21     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  0.00      1.24     0.00       20     0.00     0.00  GenshinLang::AST::ValueNode::~ValueNode()
  0.00      1.24     0.00       19     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
  0.00      1.24     0.00       15     0.00     0.00  std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::vector(std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> > const&)
  0.00      1.24     0.00       14     0.00     6.00  GenshinLang::IdentifierMap::join(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      1.24     0.00       14     0.00     0.00  std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      1.24     0.00       13     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
  0.00      1.24     0.00       10     0.00     0.00  GenshinLang::AST::ExpressionNode::~ExpressionNode()
  0.00      1.24     0.00        9     0.00     0.00  IO::PutCharPrinter::put(char)
  0.00      1.24     0.00        9     0.00     1.00  std::pair<std::_Rb_tree_iterator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, bool> std::_Rb_tree<GenshinLang::Tokenizer::Identifier, std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>, std::_Select1st<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > >::_M_insert_unique<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >(std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>&&)
  0.00      1.24     0.00        9     0.00    11.33  GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const
  0.00      1.24     0.00        8     0.00     0.00  GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType* std::__do_uninit_copy<GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType*>(GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType*)
  0.00      1.24     0.00        8     0.00     0.00  GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const
  0.00      1.24     0.00        7     0.00     0.00  void std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::_M_realloc_insert<GenshinLang::Tokenizer::Token>(__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, GenshinLang::Tokenizer::Token&&)
  0.00      1.24     0.00        6     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<GenshinLang::Tokenizer::Identifier*>(GenshinLang::Tokenizer::Identifier*)
  0.00      1.24     0.00        6     0.00     0.00  std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      1.24     0.00        6     0.00     0.00  std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      1.24     0.00        5     0.00     0.00  GenshinLang::AST::ExpressionEvaluateStatementNode::~ExpressionEvaluateStatementNode()
  0.00      1.24     0.00        5     0.00     0.00  GenshinLang::Tokenizer::Integer::parse(IO::Scanner&)
  0.00      1.24     0.00        3     0.00     0.00  GenshinLang::Interpreter::Interpreter::evaluateType(GenshinLang::AST::ExpressionNode*)
  0.00      1.24     0.00        3     0.00     3.19  void GenshinLang::Interpreter::Interpreter::runDeclarationStatement<GenshinLang::AST::VariableDeclareStatementNode*>(GenshinLang::AST::VariableDeclareStatementNode*)
  0.00      1.24     0.00        3     0.00     3.19  GenshinLang::Interpreter::Interpreter::Scope::declare(GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::TypeName)
  0.00      1.24     0.00        3     0.00     2.35  GenshinLang::AST::ParseResult<GenshinLang::AST::VariableDeclareStatementNode> GenshinLang::AST::VariableDeclareStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)
  0.00      1.24     0.00        3     0.00     0.00  GenshinLang::AST::VariableDeclareStatementNode::~VariableDeclareStatementNode()
  0.00      1.24     0.00        3     0.00     0.00  std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      1.24     0.00        3     0.00     0.00  std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      1.24     0.00        3     0.00     0.00  std::deque<GenshinLang::Trie::Trie::Node, std::allocator<GenshinLang::Trie::Trie::Node> >::_M_reallocate_map(unsigned long, bool)
  0.00      1.24     0.00        3     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
  0.00      1.24     0.00        2     0.00     0.00  GenshinLang::Program::~Program()
  0.00      1.24     0.00        2     0.00    42.00  GenshinLang::Keywords::joinKeywords(GenshinLang::IdentifierMap&)
  0.00      1.24     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      1.24     0.00        2     0.00     0.00  GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const
  0.00      1.24     0.00        1     0.00    49.11  GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&)
  0.00      1.24     0.00        1     0.00     1.78  GenshinLang::Interpreter::Interpreter::~Interpreter()
  0.00      1.24     0.00        1     0.00     0.00  GenshinLang::FileWritePrinterStdandardError<1048576ul>::FileWritePrinterStdandardError()
  0.00      1.24     0.00        1     0.00    36.83  GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)
  0.00      1.24     0.00        1     0.00     0.00  GenshinLang::AST::ForStatementNode::~ForStatementNode()
  0.00      1.24     0.00        1     0.00     2.35  GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)
  0.00      1.24     0.00        1     0.00    50.96  GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >(std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > const&)
  0.00      1.24     0.00        1     0.00     0.00  GenshinLang::Trie::Trie::Trie(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&)
  0.00      1.24     0.00        1     0.00   403.32  GenshinLang::Tokenizer::tokenize(IO::Scanner&)
  0.00      1.24     0.00        1     0.00     0.00  IO::Printer& IO::Printer::write<int, (void*)0>(int)
  0.00      1.24     0.00        1     0.00     0.00  std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
  0.00      1.24     0.00        1     0.00     0.00  std::_Deque_base<GenshinLang::Trie::Trie::Node, std::allocator<GenshinLang::Trie::Trie::Node> >::_M_initialize_map(unsigned long)
  0.00      1.24     0.00        1     0.00     0.00  std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::unordered_map(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > > const&)
  0.00      1.24     0.00        1     0.00     0.00  std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::unordered_map(std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
  0.00      1.24     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<long, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      1.24     0.00        1     0.00     0.00  std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::~vector()
  0.00      1.24     0.00        1     0.00     1.19  std::vector<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> >, std::allocator<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> > > >::~vector()
  0.00      1.24     0.00        1     0.00     0.00  std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::~variant()
  0.00      1.24     0.00        1     0.00    29.77  GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2024 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.81% of 1.24 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     96.0    0.00    1.19                 main [1]
                0.06    1.13       1/1           GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) <cycle 3> [11]
                0.00    0.00       1/1           GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
                0.00    0.00       1/1           GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >(std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > const&) [22]
                0.00    0.00       1/1           GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
                0.00    0.00       1/79          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00       1/1           GenshinLang::Interpreter::Interpreter::~Interpreter() [32]
                0.00    0.00       2/2           GenshinLang::Program::~Program() [75]
                0.00    0.00       1/1           std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::unordered_map(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > > const&) [84]
                0.00    0.00       1/1           std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::unordered_map(std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) [85]
                0.00    0.00       1/1           std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable() [82]
                0.00    0.00       1/2           std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [76]
                0.00    0.00       1/1           std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::~vector() [87]
-----------------------------------------------
[2]     96.0    0.06    1.13       1+20000007 <cycle 3 as a whole> [2]
                0.05    1.10 10000007+1           void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) <cycle 3> [3]
                0.01    0.03 10000001             GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) <cycle 3> [11]
-----------------------------------------------
                                   1             void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) <cycle 3> [3]
                             10000007             GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) <cycle 3> [11]
[3]     92.7    0.05    1.10 10000007+1       void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) <cycle 3> [3]
                0.45    0.63 30000005/30000005     GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
                0.02    0.00 30000005/270000048     GenshinLang::test() [6]
                             10000000             GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) <cycle 3> [11]
                                   1             void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) <cycle 3> [3]
-----------------------------------------------
                             100000007             GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
                0.45    0.63 30000005/30000005     void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) <cycle 3> [3]
[4]     87.3    0.45    0.63 30000005+100000007 GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
                0.17    0.00 50000004/70000007     GenshinLang::Interpreter::Interpreter::Scope::get(GenshinLang::Tokenizer::Identifier) [5]
                0.14    0.00 240000018/270000048     GenshinLang::test() [6]
                0.06    0.07 20000003/20000003     GenshinLang::Interpreter::Interpreter::evaluateLeftValueExpression(GenshinLang::AST::ExpressionNode*) [7]
                0.09    0.00 70000007/70000007     std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> > const&) [8]
                0.06    0.00 60000004/60000016     std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >&&) [9]
                0.02    0.00 40000001/40000001     std::__detail::__variant::_Variant_storage<false, decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::~_Variant_storage() [13]
                0.02    0.00 20000003/20000003     GenshinLang::Interpreter::Object::copy() [14]
                0.00    0.00       2/440         main::FileScanner::gc() [42]
                0.00    0.00       1/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
                0.00    0.00       1/19          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
                0.00    0.00       1/1           IO::Printer& IO::Printer::write<int, (void*)0>(int) [81]
                             100000007             GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
-----------------------------------------------
                             30000001             GenshinLang::Interpreter::Interpreter::Scope::get(GenshinLang::Tokenizer::Identifier) [5]
                0.07    0.00 20000003/70000007     GenshinLang::Interpreter::Interpreter::evaluateLeftValueExpression(GenshinLang::AST::ExpressionNode*) [7]
                0.17    0.00 50000004/70000007     GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
[5]     19.4    0.24    0.00 70000007+30000001 GenshinLang::Interpreter::Interpreter::Scope::get(GenshinLang::Tokenizer::Identifier) [5]
                             30000001             GenshinLang::Interpreter::Interpreter::Scope::get(GenshinLang::Tokenizer::Identifier) [5]
-----------------------------------------------
                                   5             GenshinLang::test() [6]
                0.00    0.00       1/270000048     GenshinLang::Interpreter::Interpreter::~Interpreter() [32]
                0.00    0.00       2/270000048     std::vector<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> >, std::allocator<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> > > >::~vector() [33]
                0.00    0.00       4/270000048     GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) <cycle 3> [11]
                0.00    0.00       6/270000048     GenshinLang::Interpreter::Interpreter::Scope::declare(GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::TypeName) [27]
                0.00    0.00      12/270000048     GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
                0.02    0.00 30000005/270000048     void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) <cycle 3> [3]
                0.14    0.00 240000018/270000048     GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
[6]     12.9    0.16    0.00 270000048+5       GenshinLang::test() [6]
                0.00    0.00       4/6           std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [65]
                0.00    0.00       4/19          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
                                   5             GenshinLang::test() [6]
-----------------------------------------------
                0.06    0.07 20000003/20000003     GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
[7]     10.4    0.06    0.07 20000003         GenshinLang::Interpreter::Interpreter::evaluateLeftValueExpression(GenshinLang::AST::ExpressionNode*) [7]
                0.07    0.00 20000003/70000007     GenshinLang::Interpreter::Interpreter::Scope::get(GenshinLang::Tokenizer::Identifier) [5]
-----------------------------------------------
                0.09    0.00 70000007/70000007     GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
[8]      7.3    0.09    0.00 70000007         std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> > const&) [8]
                0.00    0.00       1/13          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [58]
-----------------------------------------------
                0.00    0.00       3/60000016     GenshinLang::Interpreter::Interpreter::Scope::declare(GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::TypeName) [27]
                0.00    0.00       9/60000016     std::pair<std::_Rb_tree_iterator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, bool> std::_Rb_tree<GenshinLang::Tokenizer::Identifier, std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>, std::_Select1st<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > >::_M_insert_unique<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >(std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>&&) [28]
                0.06    0.00 60000004/60000016     GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
[9]      4.8    0.06    0.00 60000016         std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >&&) [9]
-----------------------------------------------
                                   1             _init [10]
[10]     4.0    0.05    0.00       0+1       _init [10]
                                   1             _init [10]
-----------------------------------------------
                             10000000             void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) <cycle 3> [3]
                0.06    1.13       1/1           main [1]
[11]     3.2    0.01    0.03 10000001         GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) <cycle 3> [11]
                0.03    0.00 10000001/10000166     GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00       3/3           void GenshinLang::Interpreter::Interpreter::runDeclarationStatement<GenshinLang::AST::VariableDeclareStatementNode*>(GenshinLang::AST::VariableDeclareStatementNode*) [26]
                0.00    0.00       4/270000048     GenshinLang::test() [6]
                             10000007             void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) <cycle 3> [3]
-----------------------------------------------
                                  44             GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00       6/10000166     GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00      12/10000166     GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
                0.00    0.00      22/10000166     GenshinLang::Tokenizer::Identifier::parse(IO::Scanner&) [21]
                0.00    0.00      28/10000166     GenshinLang::IdentifierMap::join(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [19]
                0.00    0.00      34/10000166     GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
                0.00    0.00      63/10000166     GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
                0.03    0.00 10000001/10000166     GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) <cycle 3> [11]
[12]     2.4    0.03    0.00 10000166+44      GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00      92/440         main::FileScanner::gc() [42]
                0.00    0.00      34/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
                0.00    0.00       3/3           std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&) [71]
                0.00    0.00       3/3           std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [72]
                                  44             GenshinLang::Interpreter::Interpreter::enterScope() [12]
-----------------------------------------------
                0.02    0.00 40000001/40000001     GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
[13]     1.6    0.02    0.00 40000001         std::__detail::__variant::_Variant_storage<false, decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::~_Variant_storage() [13]
-----------------------------------------------
                0.02    0.00 20000003/20000003     GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
[14]     1.6    0.02    0.00 20000003         GenshinLang::Interpreter::Object::copy() [14]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[15]     0.0    0.00    0.00       1         GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
                0.00    0.00      63/10000166     GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00      63/79          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00      22/22          GenshinLang::Tokenizer::Identifier::parse(IO::Scanner&) [21]
                0.00    0.00     127/440         main::FileScanner::gc() [42]
                0.00    0.00      52/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
                0.00    0.00      26/26          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [52]
                0.00    0.00      26/236         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [43]
                0.00    0.00      10/37          std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::~vector() [50]
                0.00    0.00       7/7           void std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::_M_realloc_insert<GenshinLang::Tokenizer::Token>(__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, GenshinLang::Tokenizer::Token&&) [63]
                0.00    0.00       5/5           GenshinLang::Tokenizer::Integer::parse(IO::Scanner&) [68]
-----------------------------------------------
[16]     0.0    0.00    0.00      79+34      <cycle 2 as a whole> [16]
                0.00    0.00       9             GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
                0.00    0.00     104             GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
-----------------------------------------------
                                   9             GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
[17]     0.0    0.00    0.00       9         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
                0.00    0.00      34/10000166     GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00     176/236         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [43]
                0.00    0.00      51/119         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                0.00    0.00      34/60          GenshinLang::AST::ValueNode::ValueNode(GenshinLang::AST::ValueNode const&) [48]
                0.00    0.00      34/87          GenshinLang::AST::ValueNode::~ValueNode() [47]
                0.00    0.00      20/440         main::FileScanner::gc() [42]
                0.00    0.00      20/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
                0.00    0.00       8/15          std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::vector(std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> > const&) [56]
                0.00    0.00       8/8           GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const [62]
                0.00    0.00       3/33          GenshinLang::AST::ExpressionNode::infoOf(GenshinLang::AST::ExpressionNode::Operator) [51]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<long, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [86]
                                  25             GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
-----------------------------------------------
                                  25             GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
                0.00    0.00       1/79          __static_initialization_and_destruction_0() [31]
                0.00    0.00       1/79          main [1]
                0.00    0.00       1/79          GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [30]
                0.00    0.00       2/79          GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
                0.00    0.00       3/79          GenshinLang::AST::ParseResult<GenshinLang::AST::VariableDeclareStatementNode> GenshinLang::AST::VariableDeclareStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [29]
                0.00    0.00       3/79          GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >(std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > const&) [22]
                0.00    0.00       5/79          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00      63/79          GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
[18]     0.0    0.00    0.00     104         GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00       2/2           GenshinLang::Keywords::joinKeywords(GenshinLang::IdentifierMap&) [20]
                0.00    0.00      44/119         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                0.00    0.00      44/87          GenshinLang::AST::ValueNode::~ValueNode() [47]
                0.00    0.00      44/44          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType* std::__do_uninit_copy<GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType*>(GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType*) [49]
                0.00    0.00      20/60          GenshinLang::AST::ValueNode::ValueNode(GenshinLang::AST::ValueNode const&) [48]
                0.00    0.00       8/8           GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType* std::__do_uninit_copy<GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType*>(GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType*) [61]
                0.00    0.00       4/15          std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::vector(std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> > const&) [56]
                                   9             GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
-----------------------------------------------
                0.00    0.00      14/14          GenshinLang::Keywords::joinKeywords(GenshinLang::IdentifierMap&) [20]
[19]     0.0    0.00    0.00      14         GenshinLang::IdentifierMap::join(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [19]
                0.00    0.00      28/10000166     GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00      28/440         main::FileScanner::gc() [42]
                0.00    0.00      14/14          std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [57]
-----------------------------------------------
                0.00    0.00       2/2           GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
[20]     0.0    0.00    0.00       2         GenshinLang::Keywords::joinKeywords(GenshinLang::IdentifierMap&) [20]
                0.00    0.00      14/14          GenshinLang::IdentifierMap::join(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [19]
                0.00    0.00      14/440         main::FileScanner::gc() [42]
                0.00    0.00       6/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
-----------------------------------------------
                0.00    0.00      22/22          GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
[21]     0.0    0.00    0.00      22         GenshinLang::Tokenizer::Identifier::parse(IO::Scanner&) [21]
                0.00    0.00      22/10000166     GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00      72/440         main::FileScanner::gc() [42]
                0.00    0.00      22/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[22]     0.0    0.00    0.00       1         GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >(std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > const&) [22]
                0.00    0.00       1/1           GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
                0.00    0.00       3/79          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00       3/3           GenshinLang::AST::ParseResult<GenshinLang::AST::VariableDeclareStatementNode> GenshinLang::AST::VariableDeclareStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [29]
                0.00    0.00       7/440         main::FileScanner::gc() [42]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[23]     0.0    0.00    0.00       1         GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
                0.00    0.00      12/10000166     GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00      12/270000048     GenshinLang::test() [6]
                0.00    0.00       6/9           std::pair<std::_Rb_tree_iterator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, bool> std::_Rb_tree<GenshinLang::Tokenizer::Identifier, std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>, std::_Select1st<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > >::_M_insert_unique<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >(std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>&&) [28]
                0.00    0.00      12/440         main::FileScanner::gc() [42]
                0.00    0.00      12/13          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [58]
                0.00    0.00      12/19          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
                0.00    0.00      12/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
                0.00    0.00       6/6           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<GenshinLang::Tokenizer::Identifier*>(GenshinLang::Tokenizer::Identifier*) [64]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >(std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > const&) [22]
[24]     0.0    0.00    0.00       1         GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
                0.00    0.00       1/1           GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00       2/79          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00       1/1           GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [30]
                0.00    0.00       3/119         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                0.00    0.00       3/87          GenshinLang::AST::ValueNode::~ValueNode() [47]
                0.00    0.00       2/236         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [43]
                0.00    0.00       1/15          std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::vector(std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> > const&) [56]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
[25]     0.0    0.00    0.00       1         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00       6/10000166     GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00       5/79          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00      31/236         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [43]
                0.00    0.00       9/119         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                0.00    0.00       6/60          GenshinLang::AST::ValueNode::ValueNode(GenshinLang::AST::ValueNode const&) [48]
                0.00    0.00       6/87          GenshinLang::AST::ValueNode::~ValueNode() [47]
                0.00    0.00       3/440         main::FileScanner::gc() [42]
                0.00    0.00       3/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
                0.00    0.00       2/15          std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::vector(std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> > const&) [56]
                0.00    0.00       2/2           GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const [77]
-----------------------------------------------
                0.00    0.00       3/3           GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) <cycle 3> [11]
[26]     0.0    0.00    0.00       3         void GenshinLang::Interpreter::Interpreter::runDeclarationStatement<GenshinLang::AST::VariableDeclareStatementNode*>(GenshinLang::AST::VariableDeclareStatementNode*) [26]
                0.00    0.00       3/3           GenshinLang::Interpreter::Interpreter::Scope::declare(GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::TypeName) [27]
                0.00    0.00       3/3           GenshinLang::Interpreter::Interpreter::evaluateType(GenshinLang::AST::ExpressionNode*) [69]
-----------------------------------------------
                0.00    0.00       3/3           void GenshinLang::Interpreter::Interpreter::runDeclarationStatement<GenshinLang::AST::VariableDeclareStatementNode*>(GenshinLang::AST::VariableDeclareStatementNode*) [26]
[27]     0.0    0.00    0.00       3         GenshinLang::Interpreter::Interpreter::Scope::declare(GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::TypeName) [27]
                0.00    0.00       6/270000048     GenshinLang::test() [6]
                0.00    0.00       3/60000016     std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >&&) [9]
                0.00    0.00       3/9           std::pair<std::_Rb_tree_iterator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, bool> std::_Rb_tree<GenshinLang::Tokenizer::Identifier, std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>, std::_Select1st<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > >::_M_insert_unique<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >(std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>&&) [28]
-----------------------------------------------
                0.00    0.00       3/9           GenshinLang::Interpreter::Interpreter::Scope::declare(GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::TypeName) [27]
                0.00    0.00       6/9           GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
[28]     0.0    0.00    0.00       9         std::pair<std::_Rb_tree_iterator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, bool> std::_Rb_tree<GenshinLang::Tokenizer::Identifier, std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>, std::_Select1st<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > >::_M_insert_unique<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >(std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>&&) [28]
                0.00    0.00       9/60000016     std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >&&) [9]
-----------------------------------------------
                0.00    0.00       3/3           GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >(std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > const&) [22]
[29]     0.0    0.00    0.00       3         GenshinLang::AST::ParseResult<GenshinLang::AST::VariableDeclareStatementNode> GenshinLang::AST::VariableDeclareStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [29]
                0.00    0.00       3/79          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
[30]     0.0    0.00    0.00       1         GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [30]
                0.00    0.00       1/79          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00       1/440         main::FileScanner::gc() [42]
                0.00    0.00       1/236         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [43]
-----------------------------------------------
                                                 <spontaneous>
[31]     0.0    0.00    0.00                 __static_initialization_and_destruction_0() [31]
                0.00    0.00       1/79          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00      21/440         main::FileScanner::gc() [42]
                0.00    0.00      21/21          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [53]
                0.00    0.00       1/1           GenshinLang::FileWritePrinterStdandardError<1048576ul>::FileWritePrinterStdandardError() [78]
                0.00    0.00       1/1           GenshinLang::Trie::Trie::Trie(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&) [80]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[32]     0.0    0.00    0.00       1         GenshinLang::Interpreter::Interpreter::~Interpreter() [32]
                0.00    0.00       1/1           std::vector<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> >, std::allocator<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> > > >::~vector() [33]
                0.00    0.00       1/270000048     GenshinLang::test() [6]
                0.00    0.00       1/1           std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::~variant() [88]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::Interpreter::Interpreter::~Interpreter() [32]
[33]     0.0    0.00    0.00       1         std::vector<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> >, std::allocator<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> > > >::~vector() [33]
                0.00    0.00       2/270000048     GenshinLang::test() [6]
                0.00    0.00       2/6           std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [65]
                0.00    0.00       2/19          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
-----------------------------------------------
[34]     0.0    0.00    0.00     119+48      <cycle 1 as a whole> [34]
                0.00    0.00     137             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                0.00    0.00      20             GenshinLang::AST::ValueNode::~ValueNode() <cycle 1> [54]
                0.00    0.00      10+2           GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
-----------------------------------------------
                0.00    0.00       1/440         std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::unordered_map(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > > const&) [84]
                0.00    0.00       1/440         GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [30]
                0.00    0.00       2/440         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
                0.00    0.00       2/440         GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
                0.00    0.00       3/440         GenshinLang::Interpreter::Interpreter::evaluateType(GenshinLang::AST::ExpressionNode*) [69]
                0.00    0.00       3/440         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00       7/440         std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::unordered_map(std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) [85]
                0.00    0.00       7/440         GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >(std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > const&) [22]
                0.00    0.00      12/440         GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
                0.00    0.00      14/440         GenshinLang::Keywords::joinKeywords(GenshinLang::IdentifierMap&) [20]
                0.00    0.00      20/440         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
                0.00    0.00      21/440         __static_initialization_and_destruction_0() [31]
                0.00    0.00      28/440         GenshinLang::Tokenizer::Integer::parse(IO::Scanner&) [68]
                0.00    0.00      28/440         GenshinLang::IdentifierMap::join(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [19]
                0.00    0.00      72/440         GenshinLang::Tokenizer::Identifier::parse(IO::Scanner&) [21]
                0.00    0.00      92/440         GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00     127/440         GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
[42]     0.0    0.00    0.00     440         main::FileScanner::gc() [42]
-----------------------------------------------
                0.00    0.00       1/236         GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [30]
                0.00    0.00       2/236         GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
                0.00    0.00      26/236         GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
                0.00    0.00      31/236         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00     176/236         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
[43]     0.0    0.00    0.00     236         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [43]
-----------------------------------------------
                0.00    0.00       1/169         GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
                0.00    0.00       3/169         GenshinLang::Interpreter::Interpreter::evaluateType(GenshinLang::AST::ExpressionNode*) [69]
                0.00    0.00       3/169         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00       6/169         GenshinLang::Keywords::joinKeywords(GenshinLang::IdentifierMap&) [20]
                0.00    0.00      12/169         GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
                0.00    0.00      16/169         void std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::_M_realloc_insert<GenshinLang::Tokenizer::Token>(__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, GenshinLang::Tokenizer::Token&&) [63]
                0.00    0.00      20/169         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
                0.00    0.00      22/169         GenshinLang::Tokenizer::Identifier::parse(IO::Scanner&) [21]
                0.00    0.00      34/169         GenshinLang::Interpreter::Interpreter::enterScope() [12]
                0.00    0.00      52/169         GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
[44]     0.0    0.00    0.00     169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
-----------------------------------------------
                                  10             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
                                  20             GenshinLang::AST::ValueNode::~ValueNode() <cycle 1> [54]
                0.00    0.00       3/119         GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
                0.00    0.00       9/119         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00      44/119         GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00      51/119         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
[45]     0.0    0.00    0.00     137         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                                   9             GenshinLang::AST::ValueNode::~ValueNode() <cycle 1> [54]
                                   1             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
-----------------------------------------------
                0.00    0.00      20/107         GenshinLang::AST::ValueNode::~ValueNode() <cycle 1> [54]
                0.00    0.00      87/107         GenshinLang::AST::ValueNode::~ValueNode() [47]
[46]     0.0    0.00    0.00     107         std::variant<int, GenshinLang::Tokenizer::Identifier, GenshinLang::Tokenizer::Integer, GenshinLang::Tokenizer::String, GenshinLang::Tokenizer::Symbol, GenshinLang::Tokenizer::FloatingPointNumber>::~variant() [46]
-----------------------------------------------
                0.00    0.00       3/87          GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
                0.00    0.00       6/87          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00      34/87          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
                0.00    0.00      44/87          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
[47]     0.0    0.00    0.00      87         GenshinLang::AST::ValueNode::~ValueNode() [47]
                0.00    0.00      87/107         std::variant<int, GenshinLang::Tokenizer::Identifier, GenshinLang::Tokenizer::Integer, GenshinLang::Tokenizer::String, GenshinLang::Tokenizer::Symbol, GenshinLang::Tokenizer::FloatingPointNumber>::~variant() [46]
                0.00    0.00      19/37          std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::~vector() [50]
-----------------------------------------------
                0.00    0.00       6/60          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00      20/60          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00      34/60          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
[48]     0.0    0.00    0.00      60         GenshinLang::AST::ValueNode::ValueNode(GenshinLang::AST::ValueNode const&) [48]
-----------------------------------------------
                0.00    0.00      44/44          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
[49]     0.0    0.00    0.00      44         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType* std::__do_uninit_copy<GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType*>(GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType*) [49]
-----------------------------------------------
                0.00    0.00       3/37          void std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::_M_realloc_insert<GenshinLang::Tokenizer::Token>(__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, GenshinLang::Tokenizer::Token&&) [63]
                0.00    0.00       5/37          GenshinLang::AST::ValueNode::~ValueNode() <cycle 1> [54]
                0.00    0.00      10/37          GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
                0.00    0.00      19/37          GenshinLang::AST::ValueNode::~ValueNode() [47]
[50]     0.0    0.00    0.00      37         std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::~vector() [50]
-----------------------------------------------
                0.00    0.00       3/33          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
                0.00    0.00       6/33          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const [77]
                0.00    0.00      24/33          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const [62]
[51]     0.0    0.00    0.00      33         GenshinLang::AST::ExpressionNode::infoOf(GenshinLang::AST::ExpressionNode::Operator) [51]
-----------------------------------------------
                0.00    0.00      26/26          GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
[52]     0.0    0.00    0.00      26         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [52]
-----------------------------------------------
                0.00    0.00      21/21          __static_initialization_and_destruction_0() [31]
[53]     0.0    0.00    0.00      21         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [53]
-----------------------------------------------
                                   8             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
                                   9             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                0.00    0.00       3/119         GenshinLang::AST::VariableDeclareStatementNode::~VariableDeclareStatementNode() [70]
[54]     0.0    0.00    0.00      20         GenshinLang::AST::ValueNode::~ValueNode() <cycle 1> [54]
                0.00    0.00      20/107         std::variant<int, GenshinLang::Tokenizer::Identifier, GenshinLang::Tokenizer::Integer, GenshinLang::Tokenizer::String, GenshinLang::Tokenizer::Symbol, GenshinLang::Tokenizer::FloatingPointNumber>::~variant() [46]
                0.00    0.00       5/37          std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::~vector() [50]
                                  20             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
-----------------------------------------------
                0.00    0.00       1/19          GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
                0.00    0.00       2/19          std::vector<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> >, std::allocator<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> > > >::~vector() [33]
                0.00    0.00       4/19          GenshinLang::test() [6]
                0.00    0.00      12/19          GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
[55]     0.0    0.00    0.00      19         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
                0.00    0.00       6/6           std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [66]
-----------------------------------------------
                0.00    0.00       1/15          GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [24]
                0.00    0.00       2/15          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
                0.00    0.00       4/15          GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
                0.00    0.00       8/15          GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
[56]     0.0    0.00    0.00      15         std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::vector(std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> > const&) [56]
-----------------------------------------------
                0.00    0.00      14/14          GenshinLang::IdentifierMap::join(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [19]
[57]     0.0    0.00    0.00      14         std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [57]
-----------------------------------------------
                0.00    0.00       1/13          std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> > const&) [8]
                0.00    0.00      12/13          GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
[58]     0.0    0.00    0.00      13         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [58]
-----------------------------------------------
                                   2             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
                                   1             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                0.00    0.00       2/119         GenshinLang::AST::ForStatementNode::~ForStatementNode() [79]
                0.00    0.00       2/119         GenshinLang::Tokenizer::Integer::parse(IO::Scanner&) [68]
                0.00    0.00       5/119         GenshinLang::AST::ExpressionEvaluateStatementNode::~ExpressionEvaluateStatementNode() [67]
[59]     0.0    0.00    0.00      10+2       GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
                0.00    0.00       2/440         main::FileScanner::gc() [42]
                                  10             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [45]
                                   8             GenshinLang::AST::ValueNode::~ValueNode() <cycle 1> [54]
                                   2             GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
-----------------------------------------------
                0.00    0.00       9/9           IO::Printer& IO::Printer::write<int, (void*)0>(int) [81]
[60]     0.0    0.00    0.00       9         IO::PutCharPrinter::put(char) [60]
-----------------------------------------------
                0.00    0.00       8/8           GenshinLang::IdentifierMap::IdentifierMap() <cycle 2> [18]
[61]     0.0    0.00    0.00       8         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType* std::__do_uninit_copy<GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType*>(GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType*) [61]
-----------------------------------------------
                0.00    0.00       8/8           GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
[62]     0.0    0.00    0.00       8         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const [62]
                0.00    0.00      24/33          GenshinLang::AST::ExpressionNode::infoOf(GenshinLang::AST::ExpressionNode::Operator) [51]
-----------------------------------------------
                0.00    0.00       7/7           GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
[63]     0.0    0.00    0.00       7         void std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::_M_realloc_insert<GenshinLang::Tokenizer::Token>(__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, GenshinLang::Tokenizer::Token&&) [63]
                0.00    0.00      16/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
                0.00    0.00       3/3           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [74]
                0.00    0.00       3/37          std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::~vector() [50]
-----------------------------------------------
                0.00    0.00       6/6           GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [23]
[64]     0.0    0.00    0.00       6         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<GenshinLang::Tokenizer::Identifier*>(GenshinLang::Tokenizer::Identifier*) [64]
-----------------------------------------------
                0.00    0.00       2/6           std::vector<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> >, std::allocator<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> > > >::~vector() [33]
                0.00    0.00       4/6           GenshinLang::test() [6]
[65]     0.0    0.00    0.00       6         std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [65]
-----------------------------------------------
                0.00    0.00       6/6           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
[66]     0.0    0.00    0.00       6         std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [66]
-----------------------------------------------
                0.00    0.00       2/5           GenshinLang::AST::ForStatementNode::~ForStatementNode() [79]
                0.00    0.00       3/5           GenshinLang::Program::~Program() [75]
[67]     0.0    0.00    0.00       5         GenshinLang::AST::ExpressionEvaluateStatementNode::~ExpressionEvaluateStatementNode() [67]
                0.00    0.00       5/119         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
-----------------------------------------------
                0.00    0.00       5/5           GenshinLang::Tokenizer::tokenize(IO::Scanner&) [15]
[68]     0.0    0.00    0.00       5         GenshinLang::Tokenizer::Integer::parse(IO::Scanner&) [68]
                0.00    0.00      28/440         main::FileScanner::gc() [42]
                0.00    0.00       2/119         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
-----------------------------------------------
                0.00    0.00       3/3           void GenshinLang::Interpreter::Interpreter::runDeclarationStatement<GenshinLang::AST::VariableDeclareStatementNode*>(GenshinLang::AST::VariableDeclareStatementNode*) [26]
[69]     0.0    0.00    0.00       3         GenshinLang::Interpreter::Interpreter::evaluateType(GenshinLang::AST::ExpressionNode*) [69]
                0.00    0.00       3/440         main::FileScanner::gc() [42]
                0.00    0.00       3/169         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [44]
-----------------------------------------------
                0.00    0.00       3/3           GenshinLang::Program::~Program() [75]
[70]     0.0    0.00    0.00       3         GenshinLang::AST::VariableDeclareStatementNode::~VariableDeclareStatementNode() [70]
                0.00    0.00       3/119         GenshinLang::AST::ValueNode::~ValueNode() <cycle 1> [54]
-----------------------------------------------
                0.00    0.00       3/3           GenshinLang::Interpreter::Interpreter::enterScope() [12]
[71]     0.0    0.00    0.00       3         std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&) [71]
-----------------------------------------------
                0.00    0.00       3/3           GenshinLang::Interpreter::Interpreter::enterScope() [12]
[72]     0.0    0.00    0.00       3         std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [72]
-----------------------------------------------
                0.00    0.00       3/3           GenshinLang::Trie::Trie::Trie(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&) [80]
[73]     0.0    0.00    0.00       3         std::deque<GenshinLang::Trie::Trie::Node, std::allocator<GenshinLang::Trie::Trie::Node> >::_M_reallocate_map(unsigned long, bool) [73]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::_M_realloc_insert<GenshinLang::Tokenizer::Token>(__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, GenshinLang::Tokenizer::Token&&) [63]
[74]     0.0    0.00    0.00       3         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [74]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[75]     0.0    0.00    0.00       2         GenshinLang::Program::~Program() [75]
                0.00    0.00       3/5           GenshinLang::AST::ExpressionEvaluateStatementNode::~ExpressionEvaluateStatementNode() [67]
                0.00    0.00       3/3           GenshinLang::AST::VariableDeclareStatementNode::~VariableDeclareStatementNode() [70]
                0.00    0.00       1/1           GenshinLang::AST::ForStatementNode::~ForStatementNode() [79]
-----------------------------------------------
                0.00    0.00       1/2           main [1]
                0.00    0.00       1/2           GenshinLang::IdentifierMap::~IdentifierMap() [101]
[76]     0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [76]
-----------------------------------------------
                0.00    0.00       2/2           GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const [25]
[77]     0.0    0.00    0.00       2         GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const [77]
                0.00    0.00       6/33          GenshinLang::AST::ExpressionNode::infoOf(GenshinLang::AST::ExpressionNode::Operator) [51]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0() [31]
[78]     0.0    0.00    0.00       1         GenshinLang::FileWritePrinterStdandardError<1048576ul>::FileWritePrinterStdandardError() [78]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::Program::~Program() [75]
[79]     0.0    0.00    0.00       1         GenshinLang::AST::ForStatementNode::~ForStatementNode() [79]
                0.00    0.00       2/5           GenshinLang::AST::ExpressionEvaluateStatementNode::~ExpressionEvaluateStatementNode() [67]
                0.00    0.00       2/119         GenshinLang::AST::ExpressionNode::~ExpressionNode() <cycle 1> [59]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0() [31]
[80]     0.0    0.00    0.00       1         GenshinLang::Trie::Trie::Trie(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&) [80]
                0.00    0.00       3/3           std::deque<GenshinLang::Trie::Trie::Node, std::allocator<GenshinLang::Trie::Trie::Node> >::_M_reallocate_map(unsigned long, bool) [73]
                0.00    0.00       1/1           std::_Deque_base<GenshinLang::Trie::Trie::Node, std::allocator<GenshinLang::Trie::Trie::Node> >::_M_initialize_map(unsigned long) [83]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [4]
[81]     0.0    0.00    0.00       1         IO::Printer& IO::Printer::write<int, (void*)0>(int) [81]
                0.00    0.00       9/9           IO::PutCharPrinter::put(char) [60]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[82]     0.0    0.00    0.00       1         std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable() [82]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::Trie::Trie::Trie(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&) [80]
[83]     0.0    0.00    0.00       1         std::_Deque_base<GenshinLang::Trie::Trie::Node, std::allocator<GenshinLang::Trie::Trie::Node> >::_M_initialize_map(unsigned long) [83]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[84]     0.0    0.00    0.00       1         std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::unordered_map(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > > const&) [84]
                0.00    0.00       1/440         main::FileScanner::gc() [42]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[85]     0.0    0.00    0.00       1         std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::unordered_map(std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) [85]
                0.00    0.00       7/440         main::FileScanner::gc() [42]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const <cycle 2> [17]
[86]     0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<long, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [86]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[87]     0.0    0.00    0.00       1         std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::~vector() [87]
-----------------------------------------------
                0.00    0.00       1/1           GenshinLang::Interpreter::Interpreter::~Interpreter() [32]
[88]     0.0    0.00    0.00       1         std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::~variant() [88]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2024 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [12] GenshinLang::Interpreter::Interpreter::enterScope() [47] GenshinLang::AST::ValueNode::~ValueNode() [63] void std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::_M_realloc_insert<GenshinLang::Tokenizer::Token>(__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, GenshinLang::Tokenizer::Token&&)
  [69] GenshinLang::Interpreter::Interpreter::evaluateType(GenshinLang::AST::ExpressionNode*) [80] GenshinLang::Trie::Trie::Trie(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&) [87] std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> >::~vector()
   [3] void GenshinLang::Interpreter::Interpreter::runStatement<GenshinLang::AST::StatementNode*>(GenshinLang::AST::StatementNode*) [6] GenshinLang::test() [33] std::vector<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> >, std::allocator<std::unique_ptr<GenshinLang::Interpreter::Interpreter::Scope, std::default_delete<GenshinLang::Interpreter::Interpreter::Scope> > > >::~vector()
   [4] GenshinLang::Interpreter::Interpreter::evaluateExpression(GenshinLang::AST::ExpressionNode*) [75] GenshinLang::Program::~Program() [44] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  [26] void GenshinLang::Interpreter::Interpreter::runDeclarationStatement<GenshinLang::AST::VariableDeclareStatementNode*>(GenshinLang::AST::VariableDeclareStatementNode*) [20] GenshinLang::Keywords::joinKeywords(GenshinLang::IdentifierMap&) [52] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
   [7] GenshinLang::Interpreter::Interpreter::evaluateLeftValueExpression(GenshinLang::AST::ExpressionNode*) [21] GenshinLang::Tokenizer::Identifier::parse(IO::Scanner&) [74] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
   [5] GenshinLang::Interpreter::Interpreter::Scope::get(GenshinLang::Tokenizer::Identifier) [68] GenshinLang::Tokenizer::Integer::parse(IO::Scanner&) [53] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  [27] GenshinLang::Interpreter::Interpreter::Scope::declare(GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::TypeName) [15] GenshinLang::Tokenizer::tokenize(IO::Scanner&) [9] std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >&&)
  [11] GenshinLang::Interpreter::Interpreter::runBlock(GenshinLang::AST::BlockNode*) [60] IO::PutCharPrinter::put(char) [8] std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::variant(std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> > const&)
  [23] GenshinLang::Interpreter::Interpreter::Interpreter(GenshinLang::Program&&) [81] IO::Printer& IO::Printer::write<int, (void*)0>(int) [88] std::variant<decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::~variant()
  [32] GenshinLang::Interpreter::Interpreter::~Interpreter() [57] std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [46] std::variant<int, GenshinLang::Tokenizer::Identifier, GenshinLang::Tokenizer::Integer, GenshinLang::Tokenizer::String, GenshinLang::Tokenizer::Symbol, GenshinLang::Tokenizer::FloatingPointNumber>::~variant()
  [14] GenshinLang::Interpreter::Object::copy() [71] std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&) [28] std::pair<std::_Rb_tree_iterator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, bool> std::_Rb_tree<GenshinLang::Tokenizer::Identifier, std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>, std::_Select1st<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > >::_M_insert_unique<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> >(std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object>&&)
  [19] GenshinLang::IdentifierMap::join(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [82] std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable() [13] std::__detail::__variant::_Variant_storage<false, decltype(nullptr), std::shared_ptr<std::map<GenshinLang::Tokenizer::Identifier, GenshinLang::Interpreter::Object, std::less<GenshinLang::Tokenizer::Identifier>, std::allocator<std::pair<GenshinLang::Tokenizer::Identifier const, GenshinLang::Interpreter::Object> > > >, int, std::shared_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::shared_ptr<GenshinLang::Tokenizer::Identifier>, std::shared_ptr<GenshinLang::Interpreter::ArrayObjectValue>, GenshinLang::AST::FunctionDefinitionStatementNode*, std::shared_ptr<long> >::~_Variant_storage()
  [18] GenshinLang::IdentifierMap::IdentifierMap() [72] std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [61] GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType* std::__do_uninit_copy<GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType*>(GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::PostfixValueType*)
  [78] GenshinLang::FileWritePrinterStdandardError<1048576ul>::FileWritePrinterStdandardError() [76] std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [49] GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType* std::__do_uninit_copy<GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType*>(GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType const*, GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::PostfixValueType*)
  [51] GenshinLang::AST::ExpressionNode::infoOf(GenshinLang::AST::ExpressionNode::Operator) [83] std::_Deque_base<GenshinLang::Trie::Trie::Node, std::allocator<GenshinLang::Trie::Trie::Node> >::_M_initialize_map(unsigned long) [43] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [59] GenshinLang::AST::ExpressionNode::~ExpressionNode() [84] std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::unordered_map(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > > const&) [42] main::FileScanner::gc()
  [45] GenshinLang::AST::ExpressionNode::~ExpressionNode() [85] std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::unordered_map(std::unordered_map<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) [25] GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const
  [24] GenshinLang::AST::ParseResult<GenshinLang::AST::ForStatementNode> GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [58] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [17] GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const
  [79] GenshinLang::AST::ForStatementNode::~ForStatementNode() [64] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<GenshinLang::Tokenizer::Identifier*>(GenshinLang::Tokenizer::Identifier*) [77] GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, GenshinLang::AST::ForStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&)::{lambda(auto:1 const&, auto:2 const&)#1}&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const
  [29] GenshinLang::AST::ParseResult<GenshinLang::AST::VariableDeclareStatementNode> GenshinLang::AST::VariableDeclareStatementNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [65] std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [62] GenshinLang::AST::ExpressionNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1>, int>(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&, int&&)::{lambda()#2}::operator()() const::{lambda(GenshinLang::AST::ExpressionNode::Operator, int)#1}::operator()(GenshinLang::AST::ExpressionNode::Operator, int) const
  [70] GenshinLang::AST::VariableDeclareStatementNode::~VariableDeclareStatementNode() [66] std::_Sp_counted_ptr<GenshinLang::Tokenizer::Identifier*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [10] _init
  [67] GenshinLang::AST::ExpressionEvaluateStatementNode::~ExpressionEvaluateStatementNode() [55] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [34] <cycle 1>
  [30] GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> >(std::ranges::subrange<__gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, __gnu_cxx::__normal_iterator<GenshinLang::Tokenizer::Token const*, std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >, (std::ranges::subrange_kind)1> const&) [86] std::_Sp_counted_ptr_inplace<long, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [16] <cycle 2>
  [22] GenshinLang::AST::ParseResult<GenshinLang::AST::BlockNode> GenshinLang::AST::BlockNode::parse<std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > >(std::vector<GenshinLang::Tokenizer::Token, std::allocator<GenshinLang::Tokenizer::Token> > const&) [73] std::deque<GenshinLang::Trie::Trie::Node, std::allocator<GenshinLang::Trie::Trie::Node> >::_M_reallocate_map(unsigned long, bool) [2] <cycle 3>
  [48] GenshinLang::AST::ValueNode::ValueNode(GenshinLang::AST::ValueNode const&) [56] std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::vector(std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> > const&)
  [54] GenshinLang::AST::ValueNode::~ValueNode() [50] std::vector<GenshinLang::Tokenizer::Identifier, std::allocator<GenshinLang::Tokenizer::Identifier> >::~vector()
